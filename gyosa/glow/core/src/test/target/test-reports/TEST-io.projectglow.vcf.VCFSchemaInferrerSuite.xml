<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="cloud122" name="io.projectglow.vcf.VCFSchemaInferrerSuite" tests="34" errors="0" failures="0" skipped="0" time="0.623" timestamp="2023-11-03T13:36:22">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/jdk1.8.0_211/jre/lib/amd64"/><property name="java.vm.version" value="25.211-b12"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/gsd/gyosa/glow"/><property name="java.runtime.version" value="1.8.0_211-b12"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/jdk1.8.0_211/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.util.logging.manager" value="wvlet.log.AirframeLogManager"/><property name="log4j.ignoreTCL" value="true"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="ISO-8859-1"/><property name="jnidispatch.path" value="/tmp/jna-102648/jna1976320173356081238.tmp"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="4.15.0-202-generic"/><property name="swoval.tmpdir" value="/home/gsd/.sbt/1.0"/><property name="user.home" value="/home/gsd"/><property name="user.timezone" value="Europe/Lisbon"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/home/gsd/.cache/sbt/boot/sbt-launch/1.8.2/sbt-launch-1.8.2.jar"/><property name="user.name" value="gsd"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/home/gsd/.cache/sbt/boot/sbt-launch/1.8.2/sbt-launch-1.8.2.jar"/><property name="java.home" value="/usr/lib/jvm/jdk1.8.0_211/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_211"/><property name="java.ext.dirs" value="/usr/lib/jvm/jdk1.8.0_211/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/jdk1.8.0_211/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_211/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_211/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_211/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_211/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_211/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_211/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_211/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sbt.script" value="/usr/bin/sbt"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="includes base fields" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="includes attributes field if not flattening info fields" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="sampleId field (true)" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="sampleId field (false)" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(Character,None,StringType,descriptionOne))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(String,None,StringType,descriptionTwo))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(Integer,None,IntegerType,descriptionThree))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(Float,None,DoubleType,descriptionFour))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(Flag,None,BooleanType,descriptionFive))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(String,Some(G),ArrayType(StringType,true),descriptionSix))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(Integer,Some(G),ArrayType(IntegerType,true),descriptionSeven))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="flatten info field (VCFField(Float,Some(G),ArrayType(DoubleType,true),descriptionEight))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(Character,None,StringType,descriptionOne))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(String,None,StringType,descriptionTwo))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(Integer,None,IntegerType,descriptionThree))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(Float,None,DoubleType,descriptionFour))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(String,Some(G),ArrayType(StringType,true),descriptionSix))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(Integer,Some(G),ArrayType(IntegerType,true),descriptionSeven))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="infer format fields (VCFField(Float,Some(G),ArrayType(DoubleType,true),descriptionEight))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="validate headers" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="to and from schema (ToFromSchemaTestCase(List(INFO=&lt;ID=a,Number=14,Type=String,Description=&quot;&quot;&gt;),List(FORMAT=&lt;ID=b,Number=1,Type=String,Description=&quot;&quot;&gt;)))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="to and from schema (ToFromSchemaTestCase(List(INFO=&lt;ID=a,Number=A,Type=String,Description=&quot;&quot;&gt;),List(FORMAT=&lt;ID=a,Number=A,Type=String,Description=&quot;&quot;&gt;)))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name=",Type=Integer,Description=&quot;&quot;&gt;)))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="to and from schema (ToFromSchemaTestCase(List(INFO=&lt;ID=monkey,Number=0,Type=Flag,Description=&quot;&quot;&gt;),List()))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="to and from schema (ToFromSchemaTestCase(List(INFO=&lt;ID=PL,Number=0,Type=Flag,Description=&quot;&quot;&gt;),List()))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="to and from schema (ToFromSchemaTestCase(List(),List()))" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="to and from schema (ToFromSchemaTestCase(List(INFO=&lt;ID=a,Number=G,Type=Float,Description=&quot;&quot;&gt;),List(FORMAT=&lt;ID=b,Number=R,Type=Float,Description=&quot;&quot;&gt;)))" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="include count metadata (non-integer)" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="include count metadata (integer" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="counts for fields without metadata" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="don't include sample ids or otherFields" time="0.0">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="don't return same key multiple times" time="0.001">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="CSQ" time="0.531">
                                                 
                                               </testcase><testcase classname="io.projectglow.vcf.VCFSchemaInferrerSuite" name="ANN" time="0.083">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>